import React, { useState, useDeferredValue, useEffect } from 'react'
import { Loader, Card, FormField } from '../components'
import { useGetPosts } from '../hooks/queries'

const RenderCards = ({ data, title }) => {
  if (data?.length > 0) {
    return data.map((post) => <Card key={post._id} {...post} />)
  }

  return (
    <h2 className='mt-5 font-bold text-[#6469ff] text-xl uppercase'>{title}</h2>
  )
}

const Home = () => {
  const { data: allPosts, isLoading } = useGetPosts()

  const [loading, setLoading] = useState(false)
  const [searchTerm, setSearchTerm] = useState('')
  const [searchedPosts, setSearchedPosts] = useState([]);
  // Defer the value of search term to avoid unnecessary re-renders when it doesn't change
  const deferredSearchTerm = useDeferredValue(searchTerm)

  useEffect(() => { 
    if (deferredSearchTerm) {
      setLoading(true)
      const filteredPosts = allPosts.filter((post) => post.prompt.toLowerCase().includes(deferredSearchTerm.toLowerCase()))
      setSearchedPosts(filteredPosts)
      setLoading(false)
    } else {
      setSearchedPosts([])
    }
  }, [deferredSearchTerm])

  return (
    <div className="max-w-7xl mx-auto">
      <div>
        <h1 className="text-4xl font-extrabold text-[#222328]">
          The Community Showcase
        </h1>
        <p className="text-[#666e75] mt-2 max-w-[500px]">
          Browse through a collection of imaginative and visually stunning
          images generated by DALL-E AI
        </p>
      </div>
      <div className="mt-16">
        <FormField
          labelName="Search posts"
          type="text"
          placeholder={"Search posts"}
          value={searchTerm}
          onChange={(e) => setSearchTerm(e.target.value)}
        />
      </div>
      <div className="mt-10">
        {isLoading || loading ? (
          <div className="flex justify-center items-center">
            <Loader />
          </div>
        ) : (
          <>
            {searchTerm && (
              <h2 className="font-medium text-[#666e75] text-xl mb-3">
                Showing results for{" "}
                <span className="text-[#222328]">{searchTerm}</span>
              </h2>
            )}
            <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
              {searchTerm ? (
                <RenderCards data={searchedPosts} title="No search results found" />
              ) : (
                <RenderCards data={allPosts} title="No posts found" />
              )}
            </div>
          </>
        )}
      </div>
    </div>
  );
}

export default Home